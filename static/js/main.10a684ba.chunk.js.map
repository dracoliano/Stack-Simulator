{"version":3,"sources":["components/sequence/StackedInput.jsx","components/sequence/StackedButton.jsx","components/List.jsx","components/Switch.jsx","components/Stack.jsx","App.jsx","index.js"],"names":["StackedPainel","props","stacked","TextField","onChange","type","placeholder","id","label","variant","color","margin","name","Button","style","backgroundColor","onClick","useStyles","makeStyles","theme","root","flexGrow","marginTop","paper","height","width","control","padding","spacing","typo","lineHeight","key1","textAlign","fontStyle","borderBottomRightRadius","maxWidth","key2","arrow","fontSize","List","classes","Grid","container","className","item","xs","arr","map","value","key","Fragment","itemSize","Paper","Typography","align","component","split","FormControlLabel","Switch","checked","Painel","state","data","length","sequenceStack","setLength","i","push","setState","setStack","forEach","pop","handleChange","bind","this","lengthStackIsNotNull","filter","alert","replace","match","e","target","reverse","AppBar","Box","Toolbar","WhatIsTheAmountStack","p","StackedInput","disabled","disabledPop","StackedButton","Container","fixed","justify","Component","App","Stack","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10a684ba.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField'\n\nfunction StackedPainel(props) {\n  if (props.stacked) {\n    return (\n      <>\n        <TextField\n          onChange={props.onChange}\n          type=\"number\"\n          placeholder=\"length\"\n          id=\"outlined-secondary\"\n          label=\"STACK LENGTH\"\n          variant=\"outlined\"\n          color=\"primary\"\n          margin=\"normal\"\n          name=\"length\"\n          {...props}\n        />\n      </>\n    )\n  }\n  return ''\n}\nexport default StackedPainel;","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nexport default props => {\n  if (props.stacked) {\n    return (\n      <Button\n      style={{backgroundColor: '#536dfe'}}\n        onClick={props.onClick}\n        variant=\"contained\"\n      >\n        Set Length\n    </Button>\n    )\n  }\n  return '';\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography'\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 140\n  },\n  paper: {\n    height: 120,\n    width: 90,\n    backgroundColor: '#536dfe',\n    margin: '0 auto'\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  typo: {\n    lineHeight: 3.5,\n    color: '#fff'\n  },\n  key1: {\n    textAlign: 'left',\n    backgroundColor: '#ffeb3b',\n    fontStyle: 'italic',\n    borderBottomRightRadius: 100,    \n    maxWidth: 22 \n  },\n  key2: {\n    textAlign: 'center',\n    fontStyle: 'italic',\n    backgroundColor: '#ffeb3b',\n    maxWidth: 'auto'\n  },\n  arrow: {\n    fontSize: 40,\n    marginTop: 40,\n  }\n}));\n\nexport default function List(props) {\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid item xs={12}>\n        <Grid container spacing={2}>\n          {props.arr.map((value, key) => (\n            <React.Fragment key={key}>\n              <Grid item xs={props.itemSize}>\n                <Paper className={classes.paper}>\n                  <Typography className={key <100 ? classes.key1 : classes.key2}>{key}</Typography>\n                  <Typography className={classes.typo} align=\"center\" variant=\"h6\" component=\"h3\">{value}</Typography>\n                </Paper>\n              </Grid>\n              {props.split? <ArrowRightAltIcon className={classes.arrow} /> : ''}\n            </React.Fragment>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nexport default props => {\n  return (\n      <FormControlLabel\n        control={<Switch color=\"primary\" checked={props.checked} onChange={props.onChange} />}\n        label=\"Change Stack Type\"\n      />\n  );\n}","/* eslint-disable no-unused-expressions */\nimport React, { Component } from 'react'\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nimport Container from '@material-ui/core/Container';\n\n\n\nimport StackedInput from './sequence/StackedInput'\nimport StackedButton from './sequence/StackedButton'\n\nimport List from './List'\nimport Switch from './Switch'\nimport './styles.css'\nclass Painel extends Component {\n\n  state = {\n    data: [],\n    length: 0,\n    value: '',\n    sequenceStack: true,\n  }\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this);\n    this.pop = this.pop.bind(this);\n    this.push = this.push.bind(this);\n    this.setLength = this.setLength.bind(this);\n    this.setStack = this.setStack.bind(this);\n  }\n\n  push() {\n    const { data, value, sequenceStack, length } = this.state;\n    const lengthStackIsNotNull = data.filter(data => data !== null).length;\n    sequenceStack && lengthStackIsNotNull >= length ? alert('Full stack') : false;\n\n    if (sequenceStack) {\n      if (!value) return false\n      for (let i = 0; i < data.length; i++) {\n        if (data[i] === null && value.replace(/ /g, '').match(/^\\b/g)) {\n          data[i] = value;\n          break;\n        }\n      }\n    } else {\n      value.replace(/ /g, '').match(/^\\b/g) ? data.push(value) : false;\n    }\n    this.setState({ data, value: '' })\n  }\n  pop() {\n    const { data } = this.state;\n    data.pop();\n    this.setState({ data })\n  }\n\n\n\n  setLength = () => {\n    const { length } = this.state\n    const data = []\n    for (let i = 0; i < length; i++) {\n      data.push(null)\n    }\n    this.setState({ data })\n  }\n  setStack = () => {\n    const { data, sequenceStack } = this.state\n    data.forEach(item => data.pop())\n    this.setState({ data: [], sequenceStack: !sequenceStack })\n  }\n  handleChange(e) {\n    const { name, value } = e.target;\n    if (name === 'value' && value.length > 5) return ''\n    this.setState({ [name]: value });\n  }\n  render() {\n    const data = [...this.state.data].reverse()\n    const { sequenceStack, value, length } = this.state;\n    const WhatIsTheAmountStack = () => {\n      const lengthStackIsNotNull = data.filter(data => data !== null).length;\n      return sequenceStack\n        ? `Size Stack: ${lengthStackIsNotNull} of ${data.length}`\n        : `Size Stack: ${data.length}`;\n    }\n    const disabledPush = () => sequenceStack && data.length >= 1 ? false : !sequenceStack ? false : true\n    const disabledPop = () => {\n      const lengthStackIsNotNull = data.filter(data => data !== null).length;\n      return sequenceStack && lengthStackIsNotNull >= 1\n        ? false\n        : !sequenceStack && data.length >= 1 ? false : true\n    }\n    return (\n      <>\n        <AppBar style={{ backgroundColor: '#ff1744' }}>\n          <Box >\n            <Toolbar color=\"success \">\n              <Box>\n                <Box >\n                  {WhatIsTheAmountStack()}\n                </Box>\n                <Box>\n                  <Switch checked={sequenceStack} onChange={this.setStack} />\n                </Box>\n              </Box>\n              <Box p={2}>\n                <TextField\n                  id=\"outlined-secondary\"\n                  label=\"Value\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  margin=\"normal\"\n                  placeholder=\"value\"\n                  name=\"value\"\n                  value={value}\n                  type=\"text\"\n                  onChange={this.handleChange}\n                />\n              </Box>\n              <Box p={2}>\n                <StackedInput value={length} stacked={this.state.sequenceStack} onChange={this.handleChange} />\n              </Box>\n\n              <Box p={1}>\n                <Button variant=\"contained\" disabled={disabledPush()} onClick={this.push}>PUSH</Button>\n              </Box>\n              <Box p={1}>\n                <Button variant=\"contained\" disabled={disabledPop()} onClick={this.pop}>POP</Button>\n              </Box>\n              <Box p={1}>\n                <StackedButton stacked={this.state.sequenceStack} onClick={this.setLength} />\n              </Box>\n              <Box>\n                <Typography variant=\"h5\" align=\"right\">{this.state.sequenceStack ? `Sequence Stack` : `Chained Stack`}</Typography>\n              </Box>\n            </Toolbar>\n          </Box>\n        </AppBar>\n        <Container fixed>\n          <Grid container justify=\"center\">\n            <Grid item xs={6}><List itemSize={12} arr={data.filter(item => item !== null)} /></Grid>\n            <Grid item xs={6}><List arr={data} split={this.state.sequenceStack ? '' : '>'} /></Grid>\n          </Grid>\n        </Container>\n\n\n      </>\n    )\n  }\n}\nexport default Painel;","import React from 'react';\nimport Stack from './components/Stack'\n\nfunction App() {\n  return <Stack/>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}